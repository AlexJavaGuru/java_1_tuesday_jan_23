//Для чего применяются объекты класса Optional?
Класс Optional появился в Java 8.
Задачей этого класса является предоставление решений на уровне типа-обертки
для обеспечения удобства обработки возможных null-значений.

//Какие два состояния могут быть у объектов этого класса?
два состояния Optional: Пустой и Не пустой.



//Как создаются экземпляры данного класса?
Чтобы создать пустой объект можно использовать статический метод empty()
Также объект Optional можно создать с помощью статического метода of()
Если мы предполагаем, что передаваемое значение может быть null, то используем другой метод - ofNullable()

//Как можно проверить в каком состоянии находится экземпляр данного класса?
isPresent() и isEmpty()

//Как можно получить объект, который находится внутри Optional?
Метод orElse() используется для получения значения, которое находится внутри Optional.
Он принимает один параметр - значение по умолчанию. Таким образом orElse() возвращает или само значение из Optional
или переданный аргумент.
Метод orElseGet() очень похож на метод orElse().
Однако, вместо значения по умолчанию, которое передается в качестве аргумента,
метод принимает функциональный интерфейс Supplier, который вызывает определенное действие.
Еще один способ получить значение из Optional - вызвать метод get()